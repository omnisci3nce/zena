syntax = "proto3";
package messaging;

option go_package = "github.com/omnisci3nce/zena/proto";

message Message {
  string msg_id = 1;
  // string channel_id = 2;
  string content = 2;
  int64 author_id = 3;
  string author_name = 4;
  // int64 server_timestamp = 5; // Linux epoch
}

// Used when the user sends a message and we must store it server-side
message NewMessage {
  int64 author_id = 1;
  string content = 2;
  // int64 timestamp = 3;
}

message Channel {
  string channel_id = 1;
  string name = 2;
}

message Empty {}

service Messenging {
  rpc GetMessages (Empty) returns (stream Message);
  rpc GetChannels (Empty) returns (stream Channel);
  rpc SendNewMessage (NewMessage) returns (Message);
  rpc SubscribeToChannels (ChannelIdList) returns (stream Message);
}

message ChannelIdList {
  repeated string channel_ids = 1;
}

message LoginDetails {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
}

service Auth {
  rpc Login (LoginDetails) returns (LoginResponse);
}
